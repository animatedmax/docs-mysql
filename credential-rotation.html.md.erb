---
title: Rotating MySQL Credentials
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes how to rotate credentials for MySQL for Pivotal Cloud Foundry&reg; (p-mysql). If you are also using Elastic Runtime MySQL, this procedure will rotate credentials for that installation as well.

##<a id='prereqs'></a>Prerequisites

To perform the steps below, you need to obtain the following:

1. Your root CA certificate. To retrieve the root CA certificate of your deployment and pipe it into a certificate file, run the following command:
<pre class="terminal">
$ curl "<span>https</span>://YOUR-OPSMAN-IP-ADDRESS/api/v0/security/root\_ca\_certificate" -X GET > YOUR-ROOT-CA.crt
</pre>

1. Your p-mysql root password. To retrieve your p-mysql root password, navigate to the Ops Manager Installation Dashboard and select <strong>MySQL for Pivotal Cloud Foundry > Credentials</strong>. Your p-mysql root password is called `Mysql Admin Password`.
  <%= image_tag("p-mysql-cred-1-6.png") %>

1. Your Elastic Runtime MySQL root password. To retrieve your Elastic Runtime MySQL root password, navigate to the Ops Manager Installation Dashboard and select <strong>MySQL > Credentials</strong>. Your Elastic Runtime MySQL root password is called `Mysql Admin Credentials`.

##<a id="rotate"></a>Rotate Your MySQL Credentials

1. Install the User Account and Authentication (UAA) Command Line Interface (UAAC).
  <pre class="terminal">$ gem install cf-uaac</pre>

1. Make sure `uaac` gem is installed.
  <pre class="terminal">$ which uaac
    /Users/pivotal/.gem/ruby/2.3.0/bin/uaac
  </pre>
1. Target your Ops Manager UAA and provide the path to your root CA certificate. 
  <pre class="terminal">
  $ uaac target <span>https</span>://YOUR-OPSMAN-FQDN/uaa/ --ca-cert YOUR-ROOT-CA.crt 
  Target: <span>https<span>://YOUR-OPSMAN-FQDN/uaa/
  </pre>

1. Get your token with `uaac token owner get`. 
  * Enter `opsman` for `Client ID`.
  * Press enter for `Client secret` to leave it blank. 
  * Use the user name and password you used above to log into the Ops Manager web interface for `User name` and `Password`.
  <pre class="terminal">
  $ uaac token owner get
  Client ID:  opsman
  Client secret:
  User name:  admin
  Password:  *********
  Successfully fetched token via owner password grant.
  Target: <span>https</span>://YOUR-OPSMAN-FQDN/uaa
  Context: admin, from client opsman
  </pre>

1. Run the following command to display the users and applications authorized by the UAA server, and the permissions granted to each user and application.
  <pre class="terminal">$ uaac context
  [1]<span>*</span><span>*</span>[<span>https</span>://YOUR-OPSMAN-FQDN/uaa]
  skip\_ssl\_validation: true
  ca\_cert: /Users/pivotal/.ssh/YOUR-ROOT-CA.crt
  [0]*[admin]
  user\_id: 75acfdfa-9449-4497-a093-ce40ded250ac
  client\_id: opsman
  access\_token: LONG\_ACCESS\_TOKEN\_STRING
  token\_type: bearer
  refresh\_token: LONG\_REFRESH\_TOKEN\_STRING
  expires\_in: 43199
  scope: clients.read opsman.user uaa.admin scim.read opsman.admin clients.write scim.write
  jti: 8419c793d377429aa40eea07fb6e7686
  </pre>

1. Create a file called `uaac-token` that contains only the <code>LONG\_ACCESS\_TOKEN\_STRING</code> from the output above. 

1. Use `curl` to make a request to the Ops Manager API. Authenticate with the contents of the `uaac-token` file and pipe the response into `installation_settings_current.json`. For the <code>OPSMAN\_USERNAME</code> and <code>OPSMAN\_PASSWORD</code>, use the credentials you used above to log into the Ops Manager web interface.
<pre class="terminal">
$ curl -skH "Authorization: Bearer $(cat uaac-token)" <span>https:</span>//YOUR-OPSMAN-FQDN/api/installation_settings > installation\_settings\_current.json -u OPSMAN\_USERNAME:OPSMAN\_PASSWORD
</pre>

1. Check to see that both the p-mysql and Elastic Runtime MySQL [root passwords](#prereqs) are in the current installation settings file:
  <pre class="terminal">
  $ grep -c YOUR-P-MYSQL-ROOT-PASSWORD installation\_settings\_current.json
  $ grep -c YOUR-ERT-MYSQL-ROOT-PASSWORD installation\_settings\_current.json
  </pre>

1. Remove both passwords from the installation settings file.
  <pre class="terminal">
  $ sed -e's/"value":{"identity":"root","password":"[^"]*"},\("identifier":"mysql\_admin\)/\1/g' installation\_settings\_current.json > installation\_settings\_updated.json
  </pre>

1. Validate that both passwords have been removed from the `installation_settings_updated.json` file.
  <pre class="terminal">
  $ grep -c YOUR-P-MYSQL-ROOT-PASSWORD installation\_settings\_updated.json
  0
  </pre>
  <pre class="terminal">
  $ grep -c YOUR-ERT-MYSQL-ROOT-PASSWORD installation\_settings\_updated.json
  0
  </pre>

1. Upload the updated installation settings. For the <code>OPSMAN\_USERNAME</code> and <code>OPSMAN\_PASSWORD</code>, use the credentials you used above to log into the Ops Manager web interface.
   <pre class="terminal">
  $ curl -skX POST -H "Authorization: Bearer $(cat uaac-token)" "<span>https</span>://YOUR-OPSMAN-FQDN/uaa/api/installation\_settings" -F 'installation[file]=@installation\_settings\_updated.json' -u OPSMAN\_USERNAME:OPSMAN\_PASSWORD
  {}
  </pre>

1. Navigate to the Ops Manager **Installation Dashboard** and click **Apply Changes**.

1. Once the installation has completed, validate that the p-mysql root password has been changed. Retrieve the new [password](#prereqs) from <strong>MySQL > Credentials</strong>. Use the IP address for the **MySQL Proxy** located in the **Status** tab.
   <pre class="terminal">$ mysql -uroot -p -h <%=vars.example_ip_2%>
  Enter password:
  Welcome to the MariaDB monitor.  Commands end with ; or \g.
  [...]
  </pre>

1. Validate that the Elastic Runtime MySQL password has been changed, using the new password in <strong>Elastic Runtime > Credentials</strong>. Use the IP address for the **MySQL Proxy**, located in the **Status** tab.
   <pre class="terminal">
  $ mysql -uroot -p -h 10.85.21.98
  Enter password:
  Welcome to the MariaDB monitor.  Commands end with ; or \g.
  </pre>